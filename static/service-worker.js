const s=location.pathname.split("/").slice(0,-1).join("/"),c=[s+"/_app/immutable/entry/app.DQqDddeA.js",s+"/_app/immutable/nodes/0.DcggVVGh.js",s+"/_app/immutable/assets/0.BC8IwJuT.css",s+"/_app/immutable/assets/dm-sans-latin-ext-wght-normal.CjLIybot.woff2",s+"/_app/immutable/assets/dm-sans-latin-wght-normal.RbQjuyZ0.woff2",s+"/_app/immutable/nodes/1.BpzrJChv.js",s+"/_app/immutable/nodes/2.BOPWBep6.js",s+"/_app/immutable/nodes/3.ib9f-A7k.js",s+"/_app/immutable/nodes/4.CdSdwsdR.js",s+"/_app/immutable/nodes/5.DzmbDlzh.js",s+"/_app/immutable/nodes/6.DAx1YqbR.js",s+"/_app/immutable/nodes/7.EiAJ3qLD.js",s+"/_app/immutable/nodes/8.BowA8r5e.js",s+"/_app/immutable/nodes/9.Bw-KB-Wa.js",s+"/_app/immutable/chunks/1AMSlG5m.js",s+"/_app/immutable/chunks/1pooH_Ga.js",s+"/_app/immutable/chunks/BC3GmlfE.js",s+"/_app/immutable/chunks/BPHIJFt6.js",s+"/_app/immutable/chunks/Bb2JCMIS.js",s+"/_app/immutable/chunks/BxDkxVId.js",s+"/_app/immutable/chunks/C7AgMJO5.js",s+"/_app/immutable/chunks/CUqRO1f7.js",s+"/_app/immutable/chunks/CWztfNBP.js",s+"/_app/immutable/chunks/CdKMsxSB.js",s+"/_app/immutable/chunks/CfkOHTjY.js",s+"/_app/immutable/chunks/DAC7LG0P.js",s+"/_app/immutable/chunks/DFOJzyTO.js",s+"/_app/immutable/chunks/DHzrQkMe.js",s+"/_app/immutable/chunks/DqU0JPdq.js",s+"/_app/immutable/chunks/Ir2CMSl1.js",s+"/_app/immutable/chunks/hylsCfAs.js",s+"/_app/immutable/chunks/xIU-prOT.js",s+"/_app/immutable/entry/start.BO8Lag3x.js"],l=[s+"/manifest.json",s+"/robots.txt"],o="1755783666431",m=`cache-${o}`,u=[...c,...l];self.addEventListener("install",a=>{async function n(){await(await caches.open(m)).addAll(u)}a.waitUntil(n())});self.addEventListener("activate",a=>{async function n(){for(const t of await caches.keys())t!==m&&await caches.delete(t)}a.waitUntil(n())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function n(){const t=new URL(a.request.url),p=await caches.open(m);if(u.includes(t.pathname)){const e=await p.match(t.pathname);if(e)return e}try{const e=await fetch(a.request);if(!(e instanceof Response))throw new Error("invalid response from fetch");return e.status===200&&p.put(a.request,e.clone()),e}catch(e){const i=await p.match(a.request);if(i)return i;throw e}}a.respondWith(n())});
